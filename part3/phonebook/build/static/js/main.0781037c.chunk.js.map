{"version":3,"sources":["services/persons.js","components/Person.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","newObj","axios","post","then","response","data","get","res","id","delete","modifiedObj","put","Person","person","handleDelete","name","number","onClick","Notification","props","message","style","error","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","notification","setNotification","setError","useEffect","personDb","r","onChange","event","console","log","target","value","onSubmit","preventDefault","isExist","filter","length","window","confirm","newPerson","updatedPerson","map","p","setTimeout","catch","Math","floor","random","returnedPerson","concat","type","toLowerCase","includes","i","key","n","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0781037c.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\n//insert person obj in phonebook db\r\nconst create = (newObj) => {\r\n    const request = axios.post(baseUrl, newObj)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updatePerson = (id, modifiedObj) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, modifiedObj)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { create, getAll, deletePerson, updatePerson }","import React from 'react'\r\n\r\nconst Person = ({person, handleDelete}) => {\r\n    return (\r\n            <li>\r\n                {person.name} {person.number}\r\n                <button onClick={handleDelete}>delete</button>\r\n            </li>\r\n    )\r\n}\r\n\r\nexport default Person;","import React from 'react'\r\n\r\nconst Notification = (props) => {\r\n    const notificationStyle = {\r\n        color : 'green',\r\n        background: 'lightgray',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 5,\r\n        marginBottom: 10,\r\n        \r\n    }\r\n    const errorStyle = {\r\n        color : 'red',\r\n        background: 'lightgray',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 5,\r\n        marginBottom: 10,\r\n    }\r\n    if(props.message === null)\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    )\r\nreturn(\r\n    <div style = { props.error === true ? errorStyle : notificationStyle}>\r\n      {props.message}\r\n    </div>\r\n        )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personDb from './services/persons'\nimport Person from './components/Person'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [notification, setNotification] = useState(null) \n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    personDb\n      .getAll().then(r => {\n        setPersons(r)\n      })\n  }, [])\n\n  const handleDeleteOne = (name, id) => {\n    if (window.confirm(`Are you sure to delete ${name} ?`)) {\n      personDb\n        .deletePerson(id)\n        .then(() => {\n          setPersons(persons.filter(n => n.id !== id))\n          setNewName('')\n          setNewNumber('')\n          setNotification(`person by name ${name} deleted successfully`)\n          setTimeout(()=>{\n            setNotification(null)\n          }, 5000)\n        })\n        .catch(error => {\n          console.log('error')\n          setError(true)\n          setNotification( `this object does not exist any more`)\n          setPersons(persons.filter(p => p.name !== name))\n          setTimeout(()=>{\n              setNotification(null)\n              setError(false)\n          }, 5000)\n        })\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const isExist = persons.filter(person => person.name === newName)\n\n    if (!(isExist.length > 0)) {\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n        id: Math.floor(Math.random() * 101)\n      }\n      personDb\n        .create(newPerson).then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setNotification(`person added successfully`)\n          setTimeout(() => {\n            setNotification(null)\n        }, 5000)\n        })\n    }\n    else\n      {\n        if(window.confirm(`${isExist[0].name} is already exist, do you want to update its information?`)){\n         \n          const newPerson = {\n            name : isExist[0].name,\n            number : newNumber,\n            id : isExist[0].id\n          }\n          personDb\n          .updatePerson(isExist[0].id, newPerson)\n          .then(updatedPerson  => {\n            setPersons(persons.map(p => p.name === newPerson.name ? updatedPerson  : p))\n            setNotification(`${newPerson.name} updated successfully`)\n            setNewName('')\n            setNewNumber('')\n            setTimeout(() => \n            {\n              setNotification(null)\n            }, 5000)\n          })\n          .catch(error => {\n            console.log(error)\n          })\n        }\n      }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    console.log(newFilter)\n    setNewFilter(event.target.value)\n  }\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <div>filter shown with <input onChange={handleFilterChange} value={newFilter} /></div>\n      <h2>Add a new</h2>\n      <Notification error={error} message={notification}/>\n      <form onSubmit={addPerson}>\n        <div>name: <input onChange={handleNameChange} value={newName} /></div>\n        <div>number: <input onChange={handleNumberChange} value={newNumber} /></div>\n        <div><button type=\"submit\">add</button></div>\n      </form>\n      <h2>Numbers</h2>\n\n      <ul>\n        {persons.filter(p => p.name.toLowerCase().includes(newFilter.toLowerCase()))\n          .map((person, i) =>\n            <Person\n              key={i}\n              person={person}\n              handleDelete={() => handleDeleteOne(person.name, person.id)}\n            />)}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}